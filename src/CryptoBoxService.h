////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef SRC_CRYPTOBOXSERVICE_H
#define SRC_CRYPTOBOXSERVICE_H

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <memory>
#include <string>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace cryptobox
{
    class KeyHandle;
    class Message;
    class Signature;
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace cryptobox
{
	class CryptoBoxService
	{
	public:
		using KeyHandlePtr = std::unique_ptr<KeyHandle>;
		using MessagePtr = std::unique_ptr<Message>;
		using SignaturePtr = std::unique_ptr<Signature>;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        CryptoBoxService() = delete;

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        /**
         * TODO: write docs
         */
		static KeyHandlePtr generateKey(const std::string& passPhrase);

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        /**
         * TODO: write docs
         */
		static SignaturePtr signMessage(const MessagePtr& message, const KeyHandlePtr& keyHandle);

        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        /**
         * TODO: write docs
         */
		static bool verifySignature(const SignaturePtr& signature,
		                            const MessagePtr& message,
		                            const KeyHandlePtr& keyHandle);
	};
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
